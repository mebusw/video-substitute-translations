1
00:00:01,000 --> 00:00:06,000
本中文字幕由自發性 Scrum 團隊提供：
PO 周龍鴻／翻譯：王可帆, 任蘭怡, 江岳龍, 余俊杰,
周玉萍, 林士智, 林清雅, 邱畯丞, 張峰睿, 張越程,
張鉅鑫, 陳美鳳, 黃久娟, 廖淑萍／時間軸：ZephyR(西風)

2
00:00:07,001 --> 00:00:08,069
太好了，你回來了

3
00:00:08,078 --> 00:00:10,094
現在你大概忘記第一集說了什麼

4
00:00:10,094 --> 00:00:12,133
讓我們快速的回顧一下

5
00:00:13,033 --> 00:00:16,050
我們的文化根基於敏捷原則

6
00:00:16,005 --> 00:00:18,013
所有工程都在小隊內進行

7
00:00:18,058 --> 00:00:21,134
我們試著讓這些事務
彼此關聯性低但嚴格一致

8
00:00:22,034 --> 00:00:26,132
我們喜歡互相傳授及
內部開放原始碼模式的開發

9
00:00:27,032 --> 00:00:31,114
各小隊小而頻繁的發布版本
都歸功於降低關聯性

10
00:00:32,014 --> 00:00:35,058
我們的自助模組可將
交接的需求降到最低

11
00:00:35,058 --> 00:00:40,062
且運用「發布列車」和「功能切換」
讓事情即早且頻繁地進入生產

12
00:00:40,062 --> 00:00:46,094
因為文化是所有的人
專注在激勵，社群與信任

13
00:00:46,094 --> 00:00:48,098
而不是結構與控制

14
00:00:49,034 --> 00:00:50,060
這是第一集提到的

15
00:00:50,006 --> 00:00:52,024
現在我想談談「失敗」

16
00:00:53,004 --> 00:00:54,076
我們的創辦人Daniel說得好：

17
00:00:55,012 --> 00:00:58,291
「我們刻意比任何人更快的犯錯」

18
00:00:58,399 --> 00:01:01,210
是的，我知道，聽起來有點瘋狂

19
00:01:01,021 --> 00:01:02,022
但是這個想法是這樣的

20
00:01:02,023 --> 00:01:05,076
為了要建造真正酷的東西
我們都無可避免地會犯錯

21
00:01:05,076 --> 00:01:06,084
是吧？

22
00:01:06,084 --> 00:01:07,172
但是每個錯誤同時也是學習

23
00:01:08,072 --> 00:01:10,080
所以我們失敗，更希望很快失敗

24
00:01:11,052 --> 00:01:14,053
然後可以很快學習
所以可以很快改善

25
00:01:14,053 --> 00:01:15,144
這是種長期成功的策略

26
00:01:16,044 --> 00:01:17,130
就像帶小朋友一樣

27
00:01:18,003 --> 00:01:20,079
你可放在嬰兒搖籃裡，她會很安全

28
00:01:21,006 --> 00:01:23,075
但是她學得不多，也不會很開心

29
00:01:23,075 --> 00:01:25,147
如果你讓他到處跑去探索世界

30
00:01:26,047 --> 00:01:28,070
她有時候會失敗，會摔倒

31
00:01:28,007 --> 00:01:33,023
但她會更開心
發展更快而傷口通常會好

32
00:01:33,086 --> 00:01:35,515
所以Spotify是一個包容失敗的環境

33
00:01:36,289 --> 00:01:41,100
比起避免失敗
我們對快速失敗和復原更有興趣

34
00:01:41,014 --> 00:01:43,106
我們內部有一篇部落格文
如：「慶祝失敗」

35
00:01:44,006 --> 00:01:46,100
還有故事，像是：
「如何自己搬磚砸腳」

36
00:01:47,000 --> 00:01:48,074
有些小隊甚至有「失敗牆」

37
00:01:48,074 --> 00:01:51,086
在那人們展示他們最新的失敗與學習

38
00:01:51,086 --> 00:01:53,161
失敗如果沒有學習，那就只是失敗

39
00:01:54,061 --> 00:01:57,117
因此當出錯了我們通常遵循檢討

40
00:01:58,017 --> 00:02:00,020
從來沒去追究「是誰的錯」

41
00:02:00,002 --> 00:02:01,057
只關乎錯誤的發生

42
00:02:01,075 --> 00:02:03,144
「我們學到什麼？」
「我們改變了什麼？」

43
00:02:04,044 --> 00:02:07,046
在事件管理流程裡
檢討幾乎是我們的一部分

44
00:02:07,064 --> 00:02:10,095
因此一個事件處理單沒結束
表示還有問題要解決

45
00:02:10,095 --> 00:02:14,132
當我們有學到經驗與教訓時結束
避免相同問題再發生

46
00:02:15,032 --> 00:02:17,089
修復流程，而非只是產品

47
00:02:17,089 --> 00:02:20,128
附帶一提
所有小隊每隔幾個星期就會進行檢討

48
00:02:21,028 --> 00:02:24,033
來說明哪些做得很好
哪些還要改善的

49
00:02:24,078 --> 00:02:27,117
在所有Spotify都有一個強勢文化：
持續改善

50
00:02:28,017 --> 00:02:31,030
由下而上驅動，從上到下支持

51
00:02:31,003 --> 00:02:35,035
然而，失敗必須是非致命的
或者我們活著並非為了再次失敗

52
00:02:35,062 --> 00:02:38,088
因此我們提倡這觀念「有限爆炸半徑」

53
00:02:38,088 --> 00:02:39,186
這架構是相當脫鉤的

54
00:02:40,086 --> 00:02:41,091
因此當小隊出錯了

55
00:02:42,036 --> 00:02:46,058
它通常只會衝擊系統的一小部分，而不是整個往下拉

56
00:02:46,058 --> 00:02:50,100
且因小隊具點到點的責任
對於他們的事情無須切換

57
00:02:51,000 --> 00:02:53,024
他們通常可以快速修復問題

58
00:02:53,024 --> 00:02:55,029
而大多數的新功能會先發布給少數的
使用者來測試

59
00:02:55,074 --> 00:02:58,122
並且作密切的觀察

60
00:02:59,022 --> 00:03:03,040
當這些功能都確認穩定了之後
我們會逐步地發布給世界各地的使用者

61
00:03:03,042 --> 00:03:04,070
所以就算中間出了狀況

62
00:03:04,007 --> 00:03:10,014
通常也只會影響到小部分的功能及使用者
而且影響的時間很短暫

63
00:03:11,045 --> 00:03:13,088
這種有限的損害範圍讓小隊勇於

64
00:03:13,088 --> 00:03:16,121
做更多的小型試驗，並加速學習的腳步

65
00:03:17,021 --> 00:03:20,090
而不是浪費時間在風險的預測及控制

66
00:03:20,098 --> 00:03:21,170
Mario Andretti為此下了很好的註解

67
00:03:22,007 --> 00:03:25,050
「如果事事盡在掌握　
　就表示你太過謹慎」

68
00:03:26,013 --> 00:03:28,111
好，那現在讓我們來談談產品開發吧

69
00:03:29,011 --> 00:03:32,064
我們的產品開發方法著眼於
「精實創業」原則

70
00:03:32,064 --> 00:03:33,383
也就是我們常掛在嘴上的

71
00:03:33,959 --> 00:03:37,540
「思考、建構、交付、調校」

72
00:03:37,054 --> 00:03:39,145
產品開發最大的風險就在產出錯誤的產品

73
00:03:40,045 --> 00:03:43,414
所以在決定建置新產品或主要功能前

74
00:03:43,819 --> 00:03:45,850
我們會先研究

75
00:03:45,085 --> 00:03:48,176
我們的客戶是不是真的想要這個功能？
這是否能幫大家解決真正的問題？

76
00:03:49,076 --> 00:03:54,098
接著我們會寫一個類似新聞稿或電梯簡報
的產品敘述來傳達這個功能的好處

77
00:03:54,098 --> 00:03:57,577
比如說：「電台啪啪走！」
或「好歌隨你聽」這類的產品特性標語

78
00:03:58,459 --> 00:04:00,380
我們同時也會做一些假設，像是

79
00:04:00,038 --> 00:04:03,041
在我們的核心指標中
這個功能會如何影響使用者的習慣

80
00:04:03,068 --> 00:04:05,165
他們是否會分享更多音樂？
他們會更常來登入使用嗎？

81
00:04:06,065 --> 00:04:08,073
為此我們建立了各種雛型讓大家試用

82
00:04:09,045 --> 00:04:12,110
讓他們體驗新功能的同時得到他們的回饋

83
00:04:13,016 --> 00:04:15,065
一旦我們確定這功能或產品值得建構時

84
00:04:15,065 --> 00:04:19,087
我們會開始打造MVP，也就是
「最小可行性產品」的產出計畫

85
00:04:19,087 --> 00:04:22,146
這計畫得與剛所提到的產品描述相符
但還不算是個完整的功能

86
00:04:23,046 --> 00:04:25,137
你也可以稱它是「可愛的小產品」

87
00:04:26,037 --> 00:04:29,586
當我們將功能加入產品時新的
學習階段才會開始

88
00:04:29,919 --> 00:04:32,100
因此我們會盡快的完成產出

89
00:04:32,001 --> 00:04:35,017
只釋出MVP給部份的使用者

90
00:04:35,026 --> 00:04:39,035
並使用像是A/B測試的技術
來衡量成效及驗證假設

91
00:04:39,035 --> 00:04:42,037
同時，特定小隊會來監控
持續調整產品和發布更多功能

92
00:04:42,055 --> 00:04:44,059
直到達到預期的成效

93
00:04:44,059 --> 00:04:46,071
接著我們才會再推出給其他使用者

94
00:04:46,071 --> 00:04:48,109
當然還得花點時間解決一些實務上的問題

95
00:04:49,009 --> 00:04:51,057
例如操作上的議題及怎樣規格化

96
00:04:51,057 --> 00:04:53,101
等到產品或功能全面推出的時候

97
00:04:54,001 --> 00:04:55,082
我們就知道它是一個成功的產品

98
00:04:55,082 --> 00:04:57,129
因為如果不是，我們就不會推出

99
00:04:58,029 --> 00:05:00,052
成效重於速度

100
00:05:00,052 --> 00:05:04,104
只有當預期成效達成時
產品特性才算是完成

101
00:05:05,004 --> 00:05:08,061
在這個影片中應該要注意的是
這是我們試著去工作的方式

102
00:05:08,061 --> 00:05:11,136
但實際上我們一路走來，並非如此

103
00:05:12,036 --> 00:05:16,043
現在都還處於實驗階段
我們如何確切規劃？

104
00:05:16,043 --> 00:05:18,077
我們怎麼知道什麼時候會發布什麼產品？

105
00:05:18,077 --> 00:05:20,159
嗯，說老實話，我們自己也沒個準

106
00:05:21,059 --> 00:05:23,122
我們只知道創新才是最要緊的
可預期性倒在其次

107
00:05:24,022 --> 00:05:28,024
100%的可預測性代表著0%的創新

108
00:05:28,042 --> 00:05:30,047
我們可能在這範圍的某處

109
00:05:31,003 --> 00:05:31,089
這裡

110
00:05:32,016 --> 00:05:34,100
當然，有時候我們需要做出交付的承諾

111
00:05:35,001 --> 00:05:37,016
以配合合作夥伴的整合或行銷活動

112
00:05:37,016 --> 00:05:40,082
這常牽涉到敏捷規劃技術的標準

113
00:05:40,082 --> 00:05:42,084
像是速度及向上燃燒圖

114
00:05:43,002 --> 00:05:46,028
但如果我們所要做出的承諾具有交期性質
我們通常會延遲提交

115
00:05:46,028 --> 00:05:48,084
直到產品特性都已經被證實且幾近完成
我們才會給承諾

116
00:05:48,084 --> 00:05:52,115
因為小隊不太講求計劃性、某種按部就班的
可預測性，因此可以整個聚焦在價值交付

117
00:05:53,015 --> 00:05:56,534
而不是任由某個既定計畫宰割

118
00:05:56,669 --> 00:05:57,770
有位產品負責人曾說：

119
00:05:57,077 --> 00:06:00,088
「我覺得我的小隊就像一群志工

120
00:06:00,088 --> 00:06:02,182
聚集在此從事他們所熱衷的事」

121
00:06:03,082 --> 00:06:05,149
所以，創意何來？

122
00:06:06,049 --> 00:06:09,140
好的新產品始於人

123
00:06:10,004 --> 00:06:11,046
與靈感的結合

124
00:06:11,082 --> 00:06:15,140
而唯有嬉戲與嘗試，創意才會成真

125
00:06:16,419 --> 00:06:22,000
所以我們鼓勵每個人花10%的時間從事
駭客日或駭客週

126
00:06:22,006 --> 00:06:25,011
在這段期間大家盡情去實驗或創作

127
00:06:25,011 --> 00:06:27,032
就像「撥一首歌」這個產品

128
00:06:27,032 --> 00:06:29,130
只要拿起電話並撥打你想聽得那首歌的號碼

129
00:06:30,032 --> 00:06:31,036
這有用嗎？

130
00:06:31,072 --> 00:06:31,144
不重要

131
00:06:32,044 --> 00:06:36,053
重點是，只要你試的點子夠多
總會有挖到寶的時候

132
00:06:37,034 --> 00:06:40,039
往往，做駭客時所學到的知識比駭客
這個行為本身要來得有意義

133
00:06:40,084 --> 00:06:41,147
除此之外，也挺好玩的

134
00:06:42,047 --> 00:06:45,216
所以我們每年舉辦二次Spotify內部駭客週

135
00:06:45,639 --> 00:06:48,350
好幾百人整週都在閉關當駭客

136
00:06:48,035 --> 00:06:50,102
我們的頭號標語就是「讓酷事成真」

137
00:06:51,002 --> 00:06:54,099
用你想要的方式和你想要的人
共同創作你想要的事物

138
00:06:54,099 --> 00:06:56,111
然後在禮拜五大型展示會中發表

139
00:06:57,011 --> 00:06:58,039
我們總是驚訝的發現

140
00:06:58,039 --> 00:07:02,094
我們可以在一週內
透過這種創作搞出不少名堂

141
00:07:02,094 --> 00:07:04,095
不論是用棒棒糖做成的直升機

142
00:07:05,004 --> 00:07:06,077
或以全新的方式發現音樂

143
00:07:06,077 --> 00:07:09,161
這讓創新不是那麼難

144
00:07:10,061 --> 00:07:11,088
人是天生的創造者

145
00:07:11,088 --> 00:07:14,099
所以就完全放手讓他們去並且嘗試每件事

146
00:07:14,099 --> 00:07:17,308
整體而言，我們的文化是鼓勵實驗的

147
00:07:18,199 --> 00:07:20,297
舉例來說，我們該用工具A還是工具B？

148
00:07:21,018 --> 00:07:21,076
不清楚

149
00:07:21,076 --> 00:07:22,148
讓我們都嘗試看看並且比較結果

150
00:07:23,048 --> 00:07:25,134
或者我們是不是真的需要Sprint規劃會議？

151
00:07:26,034 --> 00:07:26,100
不清楚

152
00:07:27,000 --> 00:07:29,044
那我們就跳過一些會議來看是否真的需要

153
00:07:29,044 --> 00:07:32,052
或我們該在歌手頁放5或10首排行榜歌曲？

154
00:07:33,024 --> 00:07:33,029
不清楚

155
00:07:33,074 --> 00:07:35,086
讓我們兩種都試看看並且評估成效

156
00:07:35,087 --> 00:07:37,180
一開始Spotify駭客週只是個試驗

157
00:07:38,008 --> 00:07:40,012
現在它已成為我們的文化

158
00:07:40,084 --> 00:07:41,141
所以，與其在那邊爭個你死我活

159
00:07:42,041 --> 00:07:45,060
不如好好的來討論-像是假設是什麼

160
00:07:45,006 --> 00:07:47,054
我們學到了什麼？下一個又將嘗試什麼

161
00:07:48,008 --> 00:07:52,031
這讓我們的決定多是基於客觀數據的
而不是來自個人主觀意見

162
00:07:52,031 --> 00:07:54,075
或職權指派的

163
00:07:54,075 --> 00:07:57,119
雖然我們樂於嘗試，並且試著用不同方式做事

164
00:07:58,019 --> 00:08:00,046
但我們的文化非常排斥浪費

165
00:08:00,046 --> 00:08:02,725
大家很快停止作任何沒有附加價值的事

166
00:08:03,139 --> 00:08:06,490
如果有效就繼續做，反之，就停止

167
00:08:06,049 --> 00:08:08,134
舉例來說，到目前為止
有些事是對我們有幫助的

168
00:08:09,034 --> 00:08:14,130
像檢討會議、每日站立會議、
Google文件、Git及非制式公會

169
00:08:15,031 --> 00:08:19,033
有些事情對我們沒用，像是：定期報告和交接

170
00:08:19,033 --> 00:08:22,462
獨立的測試團隊或測試階段
以及工作任務估算

171
00:08:22,759 --> 00:08:24,620
我們幾乎不做這些事

172
00:08:24,062 --> 00:08:26,158
我們也對無效的會議

173
00:08:27,058 --> 00:08:30,099
以及一些企業官話避之而唯恐不及

174
00:08:30,099 --> 00:08:33,194
最常見的資源浪費就是俗稱的大型專案

175
00:08:34,094 --> 00:08:38,192
基本上就是那種要很多小組
一起密切合作數個月的專案

176
00:08:39,092 --> 00:08:41,093
大型專案意味著巨大的風險

177
00:08:42,029 --> 00:08:44,140
所以我們力求短小精幹
精簡化需求

178
00:08:44,014 --> 00:08:48,028
並且努力把專案拆解成一系列小的工作

179
00:08:48,029 --> 00:08:51,858
然而有些時候大型專案也是有需要的

180
00:08:52,119 --> 00:08:54,166
且潛在利益遠勝於風險

181
00:08:54,589 --> 00:08:57,637
在那些情況，我們發現
有些實際的作法是很重要的

182
00:08:58,069 --> 00:09:03,040
用不同組合的實體或電子白板來視覺化流程

183
00:09:03,004 --> 00:09:04,072
進行每日同步會議

184
00:09:04,072 --> 00:09:07,104
在所有小隊所參與共同討論
彼此工作活動的關聯性

185
00:09:08,004 --> 00:09:11,076
每一或兩個禮拜進行展示會

186
00:09:11,076 --> 00:09:14,120
跟利害關係人一起針對整合出來的產品
和所有的細節進行評估

187
00:09:15,002 --> 00:09:20,871
因為逐步改善的協同合作方式，包括短而快速
的回饋循環，讓這些實務降低了風險和浪費

188
00:09:21,069 --> 00:09:24,127
我們也發現到一個專案需要
一個小而紮實的領導型團隊

189
00:09:24,649 --> 00:09:26,720
來持續監看著整個專案的大方向

190
00:09:26,072 --> 00:09:30,751
通常我們會有一位技術經理，一位產品經理
有時還會有一位設計經理，三者通力合作

191
00:09:31,399 --> 00:09:36,496
總之，我們還在嘗試怎樣來運作大型專案
畢竟我們還不是很熟悉

192
00:09:37,369 --> 00:09:40,395
我們一直都還在想辦法擺正組織成長的問題

193
00:09:40,629 --> 00:09:43,675
只要我們一成長，混亂和風險也跟著增加

194
00:09:44,089 --> 00:09:47,550
但若我們過度補償，去增加太多的結構和流程

195
00:09:47,055 --> 00:09:49,130
我們又會陷入官僚化的風險

196
00:09:50,003 --> 00:09:51,082
那就更糟糕了

197
00:09:51,379 --> 00:09:55,740
所以真正關鍵的問題是什麼樣的
「最小可行性官僚系統」？

198
00:09:55,074 --> 00:09:58,091
可以讓我們使用最少的結構和流程來

199
00:09:58,091 --> 00:10:00,260
避免陷入大亂

200
00:10:01,079 --> 00:10:04,079
這兩種都會以不同的形式造成浪費

201
00:10:04,079 --> 00:10:08,111
所以排除浪費的文化與敏捷的思維能
幫助我們保持平衡

202
00:10:08,399 --> 00:10:12,790
減少浪費的關鍵在於視覺化專案方向與內容
並且經常與夥伴討論專案

203
00:10:12,079 --> 00:10:14,127
因此，除了檢討會議的召開與檢討失敗因素外

204
00:10:15,028 --> 00:10:18,040
許多由小隊與小隊組成的中型團隊
會使用大型視覺化的的改善看板

205
00:10:18,004 --> 00:10:21,056
顯示哪些事件阻礙了進度或發展
以及我們正在處理哪些任務

206
00:10:21,092 --> 00:10:23,991
我們也喜歡討論如何定義
一件可被稱為「棒透了」的事件

207
00:10:24,819 --> 00:10:26,911
舉例來說，對小隊來說
「棒透了」表示

208
00:10:27,739 --> 00:10:30,773
實際解決了事情
或者讓新成員容易跟上

209
00:10:31,008 --> 00:10:33,052
也包括沒有發生重複出現的問題

210
00:10:33,052 --> 00:10:35,136
同時我們對一個「棒透了的架構」
的定義則包括

211
00:10:36,036 --> 00:10:39,038
我可以在一週內建立、測試
及交付我的任務

212
00:10:39,056 --> 00:10:43,061
我從資料中學習經驗
並在兩個星期後讓改善版本上線

213
00:10:44,069 --> 00:10:46,157
記住，「棒透了」
是一個方向，不是一個位置

214
00:10:46,949 --> 00:10:49,020
所以不需要是具體的內容

215
00:10:49,002 --> 00:10:51,005
但是當我們同意「棒透了」
應該長什麼樣子

216
00:10:51,032 --> 00:10:55,044
這就有助於我們聚焦在
改善工作和追蹤流程

217
00:10:55,044 --> 00:10:57,063
這裡有一個改善追蹤看板的案例

218
00:10:57,459 --> 00:11:00,500
由一個叫做豐田套路(Toyota Kata)的
精實技術得到的啟發

219
00:11:00,869 --> 00:11:06,140
左上角顯示現況
在這個案例中，小隊有品質問題

220
00:11:06,014 --> 00:11:08,038
左下顯示「棒透了」的定義

221
00:11:08,399 --> 00:11:11,455
理想上，我們不會有品質問題

222
00:11:11,959 --> 00:11:13,994
右上角是實際的目標環境

223
00:11:14,309 --> 00:11:17,361
表示，如果我們靠近「棒透了」一步
這會看起來像什麼？

224
00:11:17,829 --> 00:11:23,845
最後，右下角展示了後三個讓我們
帶往目標情境的具體行動

225
00:11:23,989 --> 00:11:27,380
當這些完成時，小隊會填上新的行動或任務

226
00:11:27,389 --> 00:11:28,487
像這樣在小隊工作室牆上的動態而鮮活的看板

227
00:11:29,369 --> 00:11:31,408
通常會在下次的檢討會議用來追蹤

228
00:11:31,759 --> 00:11:38,000
好，我知道這個影片也許讓Spotify的
每件事看起來很美好

229
00:11:38,005 --> 00:11:41,073
但是，事實上
我們還有許多問題需要處理

230
00:11:41,073 --> 00:11:44,094
我甚至可以開個漏漏長的清單

231
00:11:44,095 --> 00:11:46,148
但是我不會，因為這份清單上
的問題會很快的被解決

232
00:11:47,048 --> 00:11:48,111
我們成長快速，瞬息萬變

233
00:11:49,011 --> 00:11:54,030
今天看起來聰明的方法
可能明天會造成一個難纏的問題

234
00:11:54,329 --> 00:11:56,364
只因為我們成長了，然後每件事情都不同了

235
00:11:56,679 --> 00:12:01,400
然而，大多數問題都很短暫
因為我們會確實的去解決問題

236
00:12:01,048 --> 00:12:04,141
這間公司特別擅長改造
像是架構、流程、組織

237
00:12:05,041 --> 00:12:07,330
或任何必須用來解決問題的事物

238
00:12:07,699 --> 00:12:09,660
而這就是關鍵所在

239
00:12:09,066 --> 00:12:12,129
健全的文化可修復有問題的流程

240
00:12:13,029 --> 00:12:16,100
由於文化是如此重要
因此我們花了很大的心力去強化它

241
00:12:17,019 --> 00:12:19,043
這支影片只是一個小範例

242
00:12:19,259 --> 00:12:21,110
沒有人可以真地掌握某種文化

243
00:12:21,011 --> 00:12:23,054
只是我們的成員還是非常重視

244
00:12:23,054 --> 00:12:27,343
內部團隊如人員運作系統
以及30位以上分散在各小隊的敏捷教練

245
00:12:27,829 --> 00:12:28,837
分散在所有的小隊中

246
00:12:29,629 --> 00:12:30,671
同時我們也會執行新生訓練

247
00:12:31,049 --> 00:12:35,230
由新招募的成員組成臨時的小隊
然後讓他們實際去解決問題

248
00:12:35,023 --> 00:12:39,086
同時也學習我們的測試資料流程
以及團隊運作

249
00:12:39,086 --> 00:12:39,975
以上所談的都要在一週內完成

250
00:12:40,749 --> 00:12:42,843
這種真槍實彈的密集訓練
能讓你真正地去融入文化

251
00:12:43,689 --> 00:12:46,738
新來的人大多會讓程式在一週內上線
非常厲害

252
00:12:47,179 --> 00:12:51,182
再次強調，失敗沒關係
只要大家能從中汲取教訓

253
00:12:51,209 --> 00:12:54,215
最主要的文化還是得
透過故事來傳遞

254
00:12:54,809 --> 00:12:58,831
不論在部落格，事後檢討
展示會議或午餐時

255
00:12:59,029 --> 00:13:02,114
只要我們彼此持續分享
成功和失敗所學到的教訓

256
00:13:02,879 --> 00:13:04,910
我認為我們可以一直保持
這種良好的文化

257
00:13:04,091 --> 00:13:06,097
從各方面來看

258
00:13:06,097 --> 00:13:11,866
組織文化實際上就是
成員的態度和行動的總和

259
00:13:12,739 --> 00:13:16,796
你們就是文化
所以塑造你們想要的行為

260
00:13:17,309 --> 00:13:18,358
就這樣，說完了

261
00:13:18,799 --> 00:13:19,826
我希望大家喜歡這個故事

262
00:13:20,069 --> 00:13:21,880
感謝收看

263
00:13:25,004 --> 00:13:25,100
字幕版本：20150915.3

